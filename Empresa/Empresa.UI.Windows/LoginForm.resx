<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>